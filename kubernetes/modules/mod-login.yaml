apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  labels:
    run: mod-login
  name: mod-login
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 8081
  selector:
    run: mod-login
  type: NodePort
status:
  loadBalancer: {}
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    run: mod-login
  name: mod-login
spec:
  replicas: 1
  selector:
    matchLabels:
      run: mod-login
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        run: mod-login
    spec:
      containers:
      - image: gcr.io/okapi-173322/folio-toolkit
        name: mod-login
        readinessProbe:
          exec:
            command:
              - grep
              - 'Succeeded in deploying verticle'
              - /tmp/health
        env:
        - name: REPO_NAME
          value: 'folio-org/mod-login'
        - name: REPO_VERSION
          value: 'master'
        - name: OKAPI_MODULE_SERVICE_NAME
          value: 'mod-login'
        - name: OKAPI_MODULE_DESCRIPTOR_PATH
          value: 'target/ModuleDescriptor.json'
        - name: DB_HOST
          value: "localhost"
        - name: DB_PORT
          value: "5432"
        - name: DB_DATABASE
          value: "folio"
        - name: DB_USERNAME
          valueFrom:
            secretKeyRef:
              key: username
              name: cloudsql-db-credentials-v2
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              key: password
              name: cloudsql-db-credentials-v2
        command: ["/usr/local/bin/folio/install_java.sh"]
        args: ["java", "-jar", "target/mod-login-fat.jar"]
        resources: {}
      - name: cloudsql-proxy
        command:
          - /cloud_sql_proxy
          - --dir=/cloudsql
          - -instances=okapi-173322:us-east1:folio-v2=tcp:5432
          - -credential_file=/secrets/cloudsql/credentials.json
        image: gcr.io/cloudsql-docker/gce-proxy:1.09
        imagePullPolicy: IfNotPresent
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /secrets/cloudsql
          name: cloudsql-instance-credentials
          readOnly: true
        - mountPath: /etc/ssl/certs
          name: ssl-certs
        - mountPath: /cloudsql
          name: cloudsql
        resources: {}
      volumes:
      - name: cloudsql-instance-credentials
        secret:
          secretName: cloudsql-instance-credentials
      - name: ssl-certs
        hostPath:
          path: /etc/ssl/certs
      - name: cloudsql
        emptyDir:
status: {}
